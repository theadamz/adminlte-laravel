import{M as e,l,f as c,r as u}from"./general-DAK3ebw_.js";async function g(){if(!await e.Confirm("clear cache?").catch(t=>{t&&console.log(t)}))return;l(!0,"Please wait","Clearing Cache...");const s=await c(`${_baseURL}/cache-clear`,"GET",null);if(![200].includes(s.status)){e.HtmlNotification(u(s.data),`${s.status} - ${s.statusText}`);return}Toast.fire({icon:"success",title:s.statusText,text:s.data.message})}async function f(a){const s=await c(a,"GET",null);return[200].includes(s.status)?s.data:null}async function x(a,s,t=null,i=["id","name"],r="Retriving data..."){$(a).prop("disabled",!0),$(a).hasClass("form-select2")?$(a).next().after(`<small class="text-muted text-status">${r}</small>`):$(a).after(`<small class="text-muted text-status">${r}</small>`),$(a).val(null).empty().trigger("change");const n=await f(s);if(!n){$(a).val(null).empty().trigger("change"),$(a).prop("disabled",!1),$(a).siblings(".text-status").remove();return}$(a).append(new Option("","",!0,!0));for(const o of n.data)$(a).append(new Option(o[i[1]],o[i[0]],!1,t==o[i[0]]));$(a).prop("disabled",!1),$(a).siblings(".text-status").remove(),$(a).trigger("change")}export{g as c,x as f};
